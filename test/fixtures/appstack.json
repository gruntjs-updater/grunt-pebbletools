{"key":"appstack_bundle","val":[{"key":"theModel_appInstances","val":[{"key":"theInstance","val":[{"key":"clientScripts","val":[{"key":"ace-editor-component","val":[{"key":"devCode","val":"\nApp.AceEditorComponent = Ember.Component.extend({\n\n    templateName: 'components/ace-editor',\n    actions: {\n        execute: function() {\n\n            var driver = new webdriver.Builder().build();\n            driver.switchTo().window('slave');\n\n            var o = document.getElementById('execute');\n            o.addEventListener('click', function(e) {\n\n                eval(document.getElementById('actions').value);\n\n            }, false);\n            var testWindow = window.open('', 'slave');\n\n        }\n    },\n    didInsertElement: function () {\n        this.editor = ace.edit('ace-editor');\n        this.editor.setTheme(\"ace/theme/twilight\");//twilight, ambiance\n        this.editor.getSession().setMode(\"ace/mode/js\");\n        this.editor.setShowPrintMargin(false);\n        this.editor.getSession().setTabSize(2);\n                          this._super.apply(this, arguments);\n                          //this._copyDestinationIfOriginIsEmpty(this.$().select2('container'));\n\n                          //this.$().select2('container').on('focus', 'input', function (e) {\n                              //var $element = $(e.target), //\n                              //className = 'small-input';\n\n                          //if ($('.select2-selection-limit').length > 0) {\n                              //$element.addClass(className);\n                              //return;\n                          //}\n     }\n     \n});\n"},{"key":"codePath","val":"frontend/scenarios/components/ace-editor-component.js"},{"key":"ext","val":"js"}]},{"key":"application_controller","val":[{"key":"devCode","val":"App.ApplicationController = Ember.Controller.extend({\n    init: function() {\n        this._super();\n        //var o = Scenarios.Scenario.createRecordFromPojo({name:'hello'});\n    }\n});\n\n"},{"key":"codePath","val":"frontend/scenarios/controllers/application_controller.js"},{"key":"ext","val":"js"}]},{"key":"index_controller","val":[{"key":"devCode","val":"\nApp.IndexController = Ember.Controller.extend({\n    init: function() {\n        this._super();\n    }\n});\n"},{"key":"codePath","val":"frontend/scenarios/controllers/index_controller.js"},{"key":"ext","val":"js"}]},{"key":"scenario_controller","val":[{"key":"devCode","val":"App.ScenariosScenarioController = Ember.ObjectController.extend({\n    init: function() {\n        this._super();\n        this.set('isRunning', false);\n    },\n    isRunning: false,\n\tactions: {\n\t\thandleSubmit: function() {\n            alert('handleSubmit');\n\t\t},\n\t\trun: function() {\n            this.run();\n\t\t},\n\t\tresume: function() {\n            this.resume();\n\t\t}\n\t},\n    run: function() {\n        this.currentIndex = 0;\n        this.resume();\n    },\n    resume: function(key, value){\n        this.set('isRunning', true);\n        var snipplets = this.get('snipplets');\n        while (this.currentIndex < snipplets.get('length')) {\n            var action = snipplets.objectAt(this.currentIndex);\n            this.currentIndex++;\n            if (action.get('breakpoint')) {\n                break;\n            }\n            if (!action.get('exclude')) {\n                var dataStr = action.get('data').trim();\n                var dataObj = dataStr != '' ? JSON.parse(dataStr) : {};\n                var executeCode = this.interpolate(action.get('snipplet.code'), dataObj);\n                eval(executeCode);\n            }\n        }\n        this.set('isRunning', false);\n    },\n    /**\n     * @param {string} code\n     * @param {Object} data\n     * @private\n     */\n    interpolate: function(code, data) {\n                     debugger;\n        for (var key in data) {\n            code = code.replace('<%' + key + '%>', data[key]);\n        }\n        return code;\n    }\n\n});\n\n"},{"key":"codePath","val":"frontend/scenarios/controllers/scenario_controller.js"},{"key":"ext","val":"js"}]},{"key":"scenarios_controller","val":[{"key":"devCode","val":"App.ScenariosController = Ember.ArrayController.extend({\n    init: function() {\n        this._super();\n    },\n    activeId: null,\n    actions: {\n        clearCompleted: function() {\n            var completed = this.filterBy('isCompleted', true);\n            completed.invoke('deleteRecord');\n            completed.invoke('save');\n        },\n        selectItem: function(item) {\n            debugger;\n            var id = item.get('id');\n            this.set('activeId', item.get('id'));\n            this.transitionTo('scenarios.scenario', item);\n        },\n        createTodo: function() {\n          // Get the todo title set by the \"New Todo\" text field\n          var title = this.get('newTitle');\n          if (!title.trim()) { return; }\n\n          // Create the new Todo model\n          var todo = this.store.createRecord('todo', {\n            title: title,\n            isCompleted: false\n          });\n\n          // Clear the \"New Todo\" text field\n          this.set('newTitle', '');\n\n          // Save the new model\n          todo.save();\n        }\n    },\n    getClass: function(item) {\n                  debugger;\n                  return true;\n        //if (item.get('id') === this.get('activeId')) {\n            //return 'active';\n        //} else {\n            //return '';\n        //}\n    }.property('activeId'),\n    allAreDone: function(key, value) {\n        if (value === undefined) {\n            return !!this.get('length') && this.everyProperty('isCompleted', true);\n        } else {\n            this.setEach('isCompleted', value);\n            this.invoke('save');\n            return value;\n        }\n    }.property('@each.isCompleted'),\n\n    hasCompleted: function() {\n        return this.get('completed') > 0;\n    }.property('completed'),\n\n    completed: function() {\n        return this.filterBy('isCompleted', true).get('length');\n    }.property('@each.isCompleted'),\n\n    remaining: function() {\n        return this.filterBy('isCompleted', false).get('length');\n    }.property('@each.isCompleted'),\n\n    inflection: function() {\n        var remaining = this.get('remaining');\n        return remaining === 1 ? 'item' : 'items';\n    }.property('remaining')\n\n});\n"},{"key":"codePath","val":"frontend/scenarios/controllers/scenarios_controller.js"},{"key":"ext","val":"js"}]},{"key":"scenario","val":[{"key":"devCode","val":"App.Scenario = DS.Model.extend({\n\tname: DS.attr('string'),\n\tsnipplets: DS.hasMany('scenarioSnipplet', {async: true})\n});\n\nApp.ApplicationAdapter = DS.FixtureAdapter.extend();\n//App.ScenarioAdapter = DS.FixtureAdapter.extend();\n\nApp.Scenario.FIXTURES = [\n {\n   id: 1,\n   name: 'Scenario1',\n   snipplets: [1,3]\n },\n {\n   id: 2,\n   name: 'Scenario2',\n   snipplets: [2]\n },\n {\n   id: 3,\n   name: 'Scenario3',\n   snipplets: [1]\n }\n];\n"},{"key":"codePath","val":"frontend/scenarios/models/scenario.js"},{"key":"ext","val":"js"}]},{"key":"scenario_snipplet","val":[{"key":"devCode","val":"App.ScenarioSnipplet = DS.Model.extend({\n\tdata: DS.attr('string'),\n    snipplet: DS.belongsTo('snipplet', {async: true}),\n    exclude: DS.attr('boolean'),\n    breakpoint: DS.attr('boolean')\n});\n\nApp.ScenarioSnipplet.FIXTURES = [\n {\n   id: 1,\n   data: '{\"host\": \"local\"}',\n    snipplet: 1,\n    exclude: false,\n    breakpoint: false\n },\n {\n   id: 2,\n   data: '{\"host\": \"local2\"}',\n   snipplet: 3,\n    exclude: false,\n    breakpoint: false\n },\n {\n   id: 3,\n   data: '{\"host\": \"local3\"}',\n   snipplet: 2,\n    exclude: false,\n    breakpoint: false\n }\n];\n"},{"key":"codePath","val":"frontend/scenarios/models/scenario_snipplet.js"},{"key":"ext","val":"js"}]},{"key":"server_data","val":[{"key":"devCode","val":"App.ServerData = DS.Model.extend({\n\tname: DS.attr('string'),\n\tcode: DS.attr('string')\n});\n\n//Todos.Todo.FIXTURES = [\n //{\n   //id: 1,\n   //title: 'Learn Ember.js',\n   //isCompleted: true\n //},\n //{\n   //id: 2,\n   //title: '...',\n   //isCompleted: false\n //},\n //{\n   //id: 3,\n   //title: 'Profit!',\n   //isCompleted: false\n //}\n//];\n"},{"key":"codePath","val":"frontend/scenarios/models/server_data.js"},{"key":"ext","val":"js"}]},{"key":"snipplet","val":[{"key":"devCode","val":"App.Snipplet = DS.Model.extend({\n\tname: DS.attr('string'),\n\tcode: DS.attr('string')\n});\n\nApp.Snipplet.FIXTURES = [\n {\n   id: 1,\n   name: 'Snipplet1',\n   code: 'code1'\n },\n {\n   id: 2,\n   name: 'Snipplet2',\n   code: 'code2'\n },\n {\n   id: 3,\n   name: 'Snipplet3',\n   code: 'code3'\n }\n];\n"},{"key":"codePath","val":"frontend/scenarios/models/snipplet.js"},{"key":"ext","val":"js"}]},{"key":"application_route","val":[{"key":"devCode","val":"\nApp.ApplicationRoute = Ember.Route.extend({\n    model: function() {\n               //debugger;\n        return 'app';\n    },\n    //afterModel: function() {\n        //debugger;\n    //},\n    activate: function() {\n        //debugger;\n    },\n    deactivate: function() {\n        //debugger;\n    }\n});\n"},{"key":"codePath","val":"frontend/scenarios/routes/application_route.js"},{"key":"ext","val":"js"}]},{"key":"index_route","val":[{"key":"devCode","val":"\nApp.SnippletsSnippletIndexRoute = Ember.Route.extend({\n  model: function(){\n             return 'hello';\n  }\n});\n\n"},{"key":"codePath","val":"frontend/scenarios/routes/snipplets/snipplet/index_route.js"},{"key":"ext","val":"js"}]},{"key":"scenario_route","val":[{"key":"devCode","val":"\nApp.ScenariosScenarioRoute = Ember.Route.extend({\n    model: function(params){\n        //debugger;\n        var scenario = this.store.all('scenario').findProperty('id', params.scenarios_id);\n        var that = this;\n        scenario.get('snipplets').forEach(function(snipplet, index) {\n            var snippletFull = that.store.all('scenarioSnipplet').findProperty('id', snipplet.get('id'));\n            debugger;\n            snipplet = snippletFull;\n            //console.log(snipplet.get('id'));\n        });\n        return scenario;\n    },\n    //afterModel: function() {\n        //debugger;\n    //},\n    activate: function() {\n        //debugger;\n    },\n    deactivate: function() {\n        //debugger;\n    }\n});\n"},{"key":"codePath","val":"frontend/scenarios/routes/scenarios/scenario_route.js"},{"key":"ext","val":"js"}]},{"key":"scenarios_route","val":[{"key":"devCode","val":"\n//if renderTemplate is not present it looks for data-template=\"scenarios\"\nApp.ScenariosRoute = Ember.Route.extend({\n    model: function() {\n        //debugger;\n        //this.store.createRecordFromPojo('scenario', {name:'hello'});\n        //var recs = this.store.find('scenario');\n        //return recs;\n        return this.store.find('scenario');\n    },\n    //afterModel: function() {\n        //debugger;\n    //},\n    activate: function() {\n        //debugger;\n    },\n    deactivate: function() {\n        //this.$().hide();\n        //debugger;\n    }\n});\n"},{"key":"codePath","val":"frontend/scenarios/routes/scenarios_route.js"},{"key":"ext","val":"js"}]},{"key":"snipplet_route","val":[{"key":"devCode","val":"\nApp.SnippletsSnippletRoute = Ember.Route.extend({\n    model: function(params){\n        //debugger;\n        var snipplet = this.store.all('snipplet').findProperty('id', params.snipplet_id);\n        return snipplet;\n    },\n    //afterModel: function() {\n        //debugger;\n    //},\n    activate: function() {\n        //debugger;\n    },\n    deactivate: function() {\n        //debugger;\n    }\n});\n"},{"key":"codePath","val":"frontend/scenarios/routes/snipplets/snipplet_route.js"},{"key":"ext","val":"js"}]},{"key":"snipplets_route","val":[{"key":"devCode","val":"\nApp.SnippletsRoute = Ember.Route.extend({\n    model: function() {\n               //debugger;\n        return this.store.find('snipplet');\n    }\n});\n"},{"key":"codePath","val":"frontend/scenarios/routes/snipplets_route.js"},{"key":"ext","val":"js"}]},{"key":"sessions","val":[{"key":"devCode","val":"var Sessions = Backbone.Collection.extend({\n    url: '/sessions/list'\n});\n"},{"key":"codePath","val":"frontend/sessions/collections/sessions.js"},{"key":"ext","val":"js"}]},{"key":"session","val":[{"key":"devCode","val":"var Session = Backbone.Model.extend({\n    urlRoot: '/sessions'\n});\n"},{"key":"codePath","val":"frontend/sessions/models/session.js"},{"key":"ext","val":"js"}]},{"key":"router","val":[{"key":"devCode","val":"Router = Backbone.Router.extend({\n    routes: {\n        '': 'home',\n        'sessions': 'sessions',\n        'edit/:id': 'edit'\n    }\n});\n\nvar app = new ApplicationView();\n\nvar router = new Router();\n\nrouter.on('route:home', function() {\n    this.navigate('sessions', {trigger: true});\n});\n\nrouter.on('route:sessions', function() {\n\n    $('#stubDataListContainer').show();\n    $('#stubDataDetailsContainer').hide();\n    \n    $('#navbar-list').show();\n    $('#navbar-details').hide();\n\n    app.getStubDataList().fetchNew();\n    console.log('we have loaded the home page');\n\n});\n\nrouter.on('route:edit', function(id) {\n    $('#stubDataListContainer').hide();\n    $('#stubDataDetailsContainer').show();\n    \n    $('#navbar-list').hide();\n    $('#navbar-details').show();\n\n    app.getStubDataDetails().render({id: id});\n});\n\nBackbone.history.start();\n"},{"key":"codePath","val":"frontend/sessions/router.js"},{"key":"ext","val":"js"}]}]},{"key":"deployment","val":[{"key":"accessPoints","val":[{"key":"scenarios","val":[{"key":"config","val":"{\n    \"head\" : {\n        \"files\": [\n            \"bower_components/ace-builds/src-min-noconflict/ace.js\"\n        ]\n    },\n\n    \"vendor\" : {\n        \"files\": [\n          \"frontend/assets/javascript/jquery-1.10.2.min.js\",\n          \"bower_components/bootstrap/dist/js/bootstrap.min.js\",\n          \"frontend/assets/javascript/handlebars-1.0.0.js\",\n          \"frontend/assets/javascript/ember-1.2.0.js\",\n          \"frontend/assets/javascript/ember-data.js\",\n          \"frontend/assets/javascript/webdriver.js\"\n        ]\n    },\n\n    \"app\" : {\n        \"files\": [\n          \"frontend/scenarios/app.js\",\n          \"frontend/scenarios/router.js\",\n          \"frontend/scenarios/routes/application_route.js\",\n          \"frontend/scenarios/routes/scenarios_route.js\",\n          \"frontend/scenarios/routes/snipplets_route.js\",\n          \"frontend/scenarios/routes/index_route.js\",\n          \"frontend/scenarios/routes/scenarios/index_route.js\",\n          \"frontend/scenarios/routes/scenarios/scenario_route.js\",\n          \"frontend/scenarios/routes/scenarios/scenario/index_route.js\",\n          \"frontend/scenarios/routes/snipplets/index_route.js\",\n          \"frontend/scenarios/routes/snipplets/snipplet_route.js\",\n          \"frontend/scenarios/routes/snipplets/snipplet/index_route.js\",\n          \"frontend/scenarios/store.js\",\n          \"frontend/scenarios/models/snipplet.js\",\n          \"frontend/scenarios/models/server_data.js\",\n          \"frontend/scenarios/models/scenario.js\",\n          \"frontend/scenarios/models/scenario_snipplet.js\",\n          \"frontend/scenarios/controllers/application_controller.js\",\n          \"frontend/scenarios/controllers/index_controller.js\",\n          \"frontend/scenarios/controllers/scenarios_controller.js\",\n          \"frontend/scenarios/controllers/scenario_controller.js\",\n          \"frontend/scenarios/components/ace-editor-component.js\",\n          \"frontend/scenarios/views/edit_todo_view.js\"\n        ]\n    },\n    \"templates\" : {\n      \"basePath\": \"frontend/scenarios/templates\",\n        \"files\": [\n            \"application.hbs\",\n            \"scenarios.hbs\",\n            \"snipplets.hbs\",\n            \"scenarios/scenario.hbs\",\n            \"snipplets/snipplet.hbs\",\n            \"components/ace-editor.hbs\"\n        ]\n    }\n}\n"},{"key":"configPath","val":"config/scenarios.json"},{"key":"ext","val":"html"},{"key":"htmlpage","val":"<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Scenarios</title>\n    <link rel=\"stylesheet\" href=\"/bower_components/bootstrap/dist/css/bootstrap.min.css\">\n    {{{head}}}\n  </head>\n  <body>\n    {{{templates}}}\n    {{{vendor}}}\n    {{{app}}}\n  </body>\n</html>\n"},{"key":"viewPath","val":"views/scenarios.html"}]},{"key":"sessions","val":[{"key":"config","val":"{\n  \"head\" : {\n    \"files\": [\n      \"bower_components/ace-builds/src-min-noconflict/ace.js\"\n    ]\n  },\n  \"vendor\" : {\n    \"files\": [\n      \"bower_components/jquery/dist/jquery.min.js\",\n      \"bower_components/underscore/underscore.js\",\n      \"bower_components/backbone/backbone.js\",\n      \"bower_components/bootstrap/dist/js/bootstrap.min.js\"\n    ]\n  },\n  \"app\" : {\n    \"files\": [\n      \"frontend/sessions/models/session.js\",\n      \"frontend/sessions/collections/sessions.js\",\n      \"frontend/sessions/views/stubDataList.js\",\n      \"frontend/sessions/views/stubDataDetails.js\",\n      \"frontend/sessions/views/application.js\",\n      \"frontend/sessions/router.js\"\n    ]\n  },\n  \"templates\" : {\n    \"basePath\": \"frontend/sessions/templates\",\n    \"files\": [\n      \"application.html\",\n      \"stub-data-list.html\",\n      \"stub-data-details.html\"\n    ]\n  }\n}\n\n"},{"key":"configPath","val":"config/sessions.json"},{"key":"ext","val":"html"},{"key":"htmlpage","val":"<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Sessions</title>\n    <link rel=\"stylesheet\" href=\"/bower_components/bootstrap/dist/css/bootstrap.min.css\">\n    <script src=\"/frontend/assets/javascript/vkbeautify.0.99.00.beta.js\"></script>\n    {{{head}}}\n  </head>\n  <body>\n    <div style=\"position:absolute;top:0px;height:50px;right:0px;left:0px;\">\n        <nav class=\"navbar navbar-inverse\" role=\"navigation\">\n            <div class=\"container-fluid\">\n                <div class=\"navbar-header\">\n                    <a class=\"navbar-brand\" href=\"#\">fly and be free</a>\n                </div>\n                <div id=\"navbar-list\">\n                    <form class=\"navbar-form navbar-left\" role=\"search\">\n                        <div class=\"form-group\">\n                            <input type=\"text\" class=\"form-control\" placeholder=\"filter\" id=\"filter\">\n                        </div>\n                        <button id=\"testCreateSession\" class=\"btn btn-default btn-sm\">Test Create Session</button>\n                    </form>\n                </div>\n                <div id=\"navbar-details\">\n                    <form class=\"navbar-form navbar-right\" role=\"search\">\n                        <button id=\"updateSession\" class=\"btn btn-default btn-sm\">Update Session</button>\n                        <button id=\"deleteSession\" class=\"btn btn-default btn-sm\">Delete Session</button>\n                        <a href=\"#\" id=\"devOnFly\" class=\"navbar-link\">dev on fly</a>\n                    </form>\n                    <form class=\"navbar-form navbar-right\" role=\"search\">\n                        <div class=\"form-group\">\n                            <input type=\"text\" class=\"form-control input-sm\" id=\"copySessionUsername\" placeholder=\"username\">\n                        </div>\n                        <button id=\"copySession\" type=\"submit\" class=\"btn btn-default btn-sm\">Clone Session</button>\n                    </form>\n                </div>\n            </div>\n        </nav>\n    </div>\n    <div style=\"position:absolute;top:50px;bottom:0px;right:0px;left:0px;\">\n        <div id=\"stubDataListContainer\" style=\"position:absolute;top:0px;bottom:0px;right:0px;left:0px;\">\n        </div>\n        <div id=\"stubDataDetailsContainer\" style=\"position:absolute;top:0px;bottom:0px;right:0px;left:0px;\">\n        </div>\n    </div>\n    {{{templates}}}\n    {{{vendor}}}\n    {{{app}}}\n  </body>\n</html>\n"},{"key":"viewPath","val":"views/sessions.html"}]},{"key":"index","val":[{"key":"htmlpage","val":"<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Be Free</title>\n    <link rel=\"stylesheet\" href=\"/bower_components/bootstrap/dist/css/bootstrap.min.css\">\n  </head>\n  <body>\n    <div style=\"position:absolute;top:0px;height:50px;right:0px;left:0px;\">\n        <nav class=\"navbar navbar-inverse\" role=\"navigation\">\n            <div class=\"container-fluid\">\n                <div class=\"navbar-header\">\n                    <a class=\"navbar-brand\" href=\"#\">fly and be free</a>\n                </div>\n            </div>\n        </nav>\n    </div>\n    <div style=\"position:absolute;top:50px;bottom:0px;right:0px;left:0px;\">\n        index\n    </div>\n  </body>\n</html>\n"},{"key":"viewPath","val":"views/index.html"},{"key":"ext","val":"html"}]},{"key":"testRequireJs","val":[{"key":"htmlpage","val":"<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Dev Basic</title>\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t<script data-main=\"frontend/assets/require-test/main\" src=\"/bower_components/requirejs/require.js\"></script>\t\n\t\t<script>\n\t\t\t\t\t\t\t\t\n\t\t\tfunction load() {\n\n\t\t\t\trequire([\"hello\"], function(hello) {\n\t\t\t\t\thello.start();\n\t\t\t\t});\n\t\t\t\t\t\n\t\t\t}\n\n\t\t</script>\n\t</head>\n\t<body onload=\"load();\">\n\t</body>\n"},{"key":"viewPath","val":"views/testRequireJs.html"},{"key":"ext","val":"html"}]}]}]}]}]},{"key":"theModel_controls","val":[{"key":"application","val":[{"key":"template","val":"\n"},{"key":"templatePath","val":"frontend/sessions/templates/application.html"},{"key":"ext","val":"js"},{"key":"code","val":"\n//if (App.platformInfo.debugMode) {\n\n    function ApiRecorder(linkEle) {\n        this.linkEle = linkEle;\n        var that = this;\n        if (linkEle) {\n            linkEle.addEventListener('click', function() {\n\n                var message = prompt('Send with message such as \"rtsunoda: data from somewhere\"');\n                if (message && message.indexOf(':') != -1) {\n\n                    var data = {\n                        'PAGE_DATA': that.PAGE_DATA,\n                        'api': that.api,\n                        'message': message\n                    };\n                    $.post('http://127.0.0.1:8181/sessions', data, function() {\n\n                    });\n\n                } else {\n                    alert('please add, \"username: your brief message describing the session\"');\n                }\n\n            }, false);\n\n            //this.PAGE_DATA = PAGE_DATA;\n            this.PAGE_DATA = {};\n            this.api = [];\n        }\n    }\n\n    ApiRecorder.prototype.addData = function (data) {\n        if (this.linkEle) {\n            //quick way to remove functions (error ...)\n            this.api.push(JSON.parse(JSON.stringify(data)));\n        }\n    };\n\n\n    $.ajaxPrefilter(function( options, originalOptions, jqXHR ) {\n        var pathParts = window.location.pathname.split('/');\n        pathParts.shift(); //''\n        pathParts.shift(); //sessions\n        var appName = pathParts.shift();\n        console.log(appName);\n        var releaseVersion = pathParts.shift();\n        console.log(releaseVersion);\n        var params = 'appName=' + appName + '&releaseVersion=' + releaseVersion;\n        options.url = options.url.indexOf('?') != -1 ? options.url + '&' + params : options.url + '?' + params;\n        \n        var originalSuccess = options.success;\n        options.success = function (data) {\n            \n            apiRecorder.addData({options: options, response: data});\n\n            if (originalSuccess != null) {\n                originalSuccess(data);\n            }\n        };\n        var originalError = options.error;\n        options.error = function (data) {\n            \n            apiRecorder.addData({options: options, response: data});\n\n            if (originalError != null) {\n                originalError(data);\n            }\n        };\n    });\n\n\n    var apiRecorder = new ApiRecorder(document.getElementById('testCreateSession'));\n//}\n\n\nApplicationView = Backbone.View.extend({\n    el: 'body',\n\n    initialize: function(){\n        //this.render();\n    },\n    render: function(){\n        \n        //var template = _.template( $(\"#application\").html(), {} );\n        //this.$el.html(template);\n        //this.getStubDataList();\n        //this.$el.$html(this.template());\n\n        //this.stubDataList.setElement(this.$('#stubDataListContainer')).render();\n        return this;\n    },\n    getStubDataList: function() {\n        if (!this.stubDataList) {\n            this.stubDataList = new StubDataList({ el: $('#stubDataListContainer') });\n        }\n        return this.stubDataList;\n    },\n    getStubDataDetails: function() {\n        if (!this.stubDataDetails) {\n            this.stubDataDetails = new StubDataDetails({ el: $('#stubDataDetailsContainer') });\n        }\n        return this.stubDataDetails;\n    },\n    events: {\n        \"keyup #filter\": \"doSearch\",\n        'click #deleteSession': 'deleteSession',\n        'click #updateSession': 'updateSession',\n        'click #devOnFly': 'devOnFly',\n        'click #testCreateSession': 'testCreateSession',\n        'click #copySession': 'copySession'\n    },\n    copySession: function() {\n        var username = $('#copySessionUsername').val();\n        this.stubDataDetails.copySession(username);\n        return false;\n    },\n    updateSession: function() {\n        this.stubDataDetails.updateSession();\n        return false;\n    },\n    deleteSession: function() {\n        this.stubDataDetails.deleteSession();\n        return false;\n    },\n    devOnFly: function() {\n        this.stubDataDetails.devOnFly();\n        return false;\n    },\n    doSearch: function( event ){\n\n        var filterVal = document.getElementById('filter').value;\n        this.stubDataList.filterRecs(filterVal);\n        return false; //dont proprogate\n\n    }\n\n});\n\n"},{"key":"codePath","val":"frontend/sessions/views/application.js"}]},{"key":"ace-editor","val":[{"key":"template","val":"<div id=\"ace-editor\" style=\"z-index:10;position:absolute;bottom:0px;top:0px;right:0px;left:0px\" />\n"},{"key":"templatePath","val":"frontend/scenarios/templates/components/ace-editor.hbs"},{"key":"ext","val":"hbs"}]},{"key":"scenarios","val":[{"key":"template","val":"\n<div style=\"position:absolute;top:0px;bottom:0px;left:0px;width:200px;\">\n    <ul class=\"nav nav-pills nav-stacked\">\n        {{#each item in model}}\n            {{#link-to \"scenarios.scenario\" item tagName=\"li\"}}\n                <a href=\"#\">{{item.name}}</a>\n            {{/link-to}}\n        {{/each}}\n    </ul> \n</div>\n<div style=\"position:absolute;top:0px;bottom:0px;left:200px;right:0px;\">\n    {{outlet}}\n</div>\n"},{"key":"templatePath","val":"frontend/scenarios/templates/scenarios.hbs"},{"key":"ext","val":"hbs"}]},{"key":"scenario","val":[{"key":"template","val":"<div style=\"position:absolute;bottom:200px;top:0px;right:0px;left:0px\">\n    <div class=\"btn-group\">\n        <button type=\"button\" {{action \"run\"}} class=\"btn btn-default\">Run</button>\n        <button type=\"button\" {{action \"resume\"}} class=\"btn btn-default\">Resume</button>\n    </div>\n    <ul class=\"list-group\">\n        {{#each item in model.snipplets}}\n            <li class=\"list-group-item\">\n                {{input type=\"checkbox\" checked=item.exclude}}\n                    <span>{{item.data}}</span>\n                {{input type=\"checkbox\" checked=item.breakpoint}}\n            </li>\n        {{/each}}\n    </ul>\n</div>\n<div style=\"position:absolute;bottom:0px;height:200px;right:0px;left:0px\">\n    {{ace-editor}}\n</div>\n"},{"key":"templatePath","val":"frontend/scenarios/templates/scenarios/scenario.hbs"},{"key":"ext","val":"hbs"}]},{"key":"snipplets","val":[{"key":"template","val":"<div style=\"position:absolute;top:0px;bottom:0px;left:0px;width:200px;\">\n    <ul class=\"nav nav-pills nav-stacked\">\n        {{#each item in model}}\n            {{#link-to \"snipplets.snipplet\" item tagName=\"li\"}}\n                <a href=\"#\">{{item.name}}</a>\n            {{/link-to}}\n        {{/each}}\n    </ul> \n</div>\n<div style=\"position:absolute;top:0px;bottom:0px;left:200px;right:0px;\">\n    {{outlet}}\n</div>\n"},{"key":"templatePath","val":"frontend/scenarios/templates/snipplets.hbs"},{"key":"ext","val":"hbs"}]},{"key":"snipplet","val":[{"key":"template","val":"<div style=\"position:absolute;bottom:200px;top:0px;right:0px;left:0px\">\n    {{model.name}}\n    <form {{action \"handleSubmit\" on=submit}}>\n        {{input value=\"hello\"}}\n    </form>\n</div>\n<div style=\"position:absolute;bottom:0px;height:200px;right:0px;left:0px\">\n    {{ace-editor}}\n</div>\n"},{"key":"templatePath","val":"frontend/scenarios/templates/snipplets/snipplet.hbs"},{"key":"ext","val":"hbs"}]},{"key":"stub-data-details","val":[{"key":"template","val":"<div style=\"position:absolute;top:0px;bottom:0px;right:0px;left:0px;\">\n    <div id=\"ace-editor\" style=\"z-index:10;position:absolute;bottom:0px;top:0px;right:0px;left:0px\" />\n</div>\n"},{"key":"templatePath","val":"frontend/sessions/templates/stub-data-details.html"},{"key":"ext","val":"html"}]},{"key":"stub-data-list","val":[{"key":"template","val":"<table class=\"table table-hover table-striped table-condensed\">\n    <thead>\n        <tr>\n            <th>client/cobrand</th>\n            <th>url</th>\n            <th>date</th>\n        </tr>\n    </thead>\n    <tbody id=\"tab-body\">\n        <% _.each(sessions, function(session) { %>\n        <tr>\n            <td data-placement=\"top\" data-toggle=\"tooltip\" title=\"<%= session.get('message') %>\" ><a href=\"#/edit/<%= session.get('id') %>\"><%= session.get('username') + '/' + session.get('clientName') + '/' + session.get('cobrandName') %></a></td>\n            <td data-placement=\"top\" data-toggle=\"tooltip\" title=\"<%= session.get('searchParams') %>\" ><%= session.get('requestUrlWithParameters') %></td>\n            <td><%= session.get('timeString') %></td>\n        </tr>\n\n        <% }); %>\n    </tbody> \n</table>\n"},{"key":"templatePath","val":"frontend/sessions/templates/stub-data-list.html"},{"key":"ext","val":"html"}]},{"key":"stubDataDetails","val":[{"key":"code","val":"\nStubDataDetails = Backbone.View.extend({\n\n    initialize: function(){\n    \n    },\n    render: function(options){\n        if (options.id) {\n            var that = this;\n            this.session = new Session({id: options.id});\n            this.session.fetch({ //GET /sessions/1\n                success: function(session) {\n                    var template = _.template( $(\"#stub-data-details\").html(), {session: session} );\n                    that.$el.html( template );\n                    that.editor = ace.edit('ace-editor');\n                    that.editor.setTheme(\"ace/theme/twilight\");//twilight, ambiance\n                    that.editor.getSession().setMode(\"ace/mode/json\");\n                    that.editor.setShowPrintMargin(false);\n                    that.editor.getSession().setTabSize(2);\n                    that.editor.getSession().setValue(vkbeautify.json(JSON.stringify(session)));\n                }\n            });\n        } else {\n            //new\n        }\n\n        return this;\n    },\n    copySession: function(username) {\n        console.log('POST: ' + this.session.get('id'));\n        $.post('/sessions/copySession', {id: this.session.get('id'), username: username}, function(ret) {\n            console.log(ret);\n            var o = JSON.parse(ret);\n            console.log(o.id);\n            router.navigate('#/edit/' + o.id, {trigger: true});\n        });\n    },\n    updateSession: function() {\n        var val = this.editor.getSession().getValue();\n        var o = JSON.parse(val);\n        //PUT /sessions/id  \n        this.session.save(o, {\n            success: function(oo) {\n                //router.navigate('#/edit/' + that.session.id, {trigger: true});\n            }\n        });\n    },\n    deleteSession: function() {\n        //DELETE /sessions/id  \n        this.session.destroy({\n            success: function() {\n                router.navigate('', {trigger: true});\n            }\n        });\n    },\n    devOnFly: function() {\n        var path = window.location.pathname;\n        var hash = window.location.hash;\n        var pathParts = path.split('/');\n        var hashParts = hash.split('/');\n        var version = pathParts.pop();\n        var app = pathParts.pop();\n        var id = hashParts.pop();\n\n        var host = this.session.get('lastRequestIpAddr') || 'localhost';\n\n        window.location.href = 'http://' + host + ':8888/apps/' + app + '/' + version + '/' + id;\n    }\n\n});\n\n"},{"key":"codePath","val":"frontend/sessions/views/stubDataDetails.js"},{"key":"ext","val":"js"}]},{"key":"stubdatalist","val":[{"key":"code","val":"\nStubDataList = Backbone.View.extend({\n\n    initialize: function(){\n\n    },\n    fetchNew: function() {\n        var sessions = new Sessions();\n        var that = this;\n        sessions.fetch({\n            success: function(data) {\n                that.sessions = data.models;\n                for (var i = 0; i < that.sessions.length; i++) {\n                    var model = that.sessions[i];\n                    var date = new Date(model.get('serverTime'));\n                    model.set('timeString', \n                        date.getMonth() + '/' + \n                        date.getDate() + '/' + \n                        date.getFullYear() + \n                        ' (' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds() + ')');\n                }\n                that.filteredList = that.sessions;\n                that.render();\n             }\n        });\n    },\n    render: function(){\n        var template = _.template( $(\"#stub-data-list\").html(), {sessions: this.filteredList});\n        // Load the compiled HTML into the Backbone \"el\"\n        this.$el.html( template );\n        return this;\n    },\n    filterRecs: function(filterVal) {\n          this.filteredList = this.sessions.filter(function(item, index, array) {\n\n              var s = item.get('username') + '/' + item.get('clientName') + '/' + item.get('cobrandName') + ' | ' + item.get('requestUrlWithParameters') + ' | ' + item.get('searchParams') + ' | ' + item.get('message');\n              return s.indexOf(filterVal) != -1;\n\n          });\n          this.render();\n    }\n});\n\n"},{"key":"codePath","val":"frontend/sessions/views/stubdatalist.js"},{"key":"ext","val":"js"}]}]}]}